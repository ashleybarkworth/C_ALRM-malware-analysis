import os
import json
import pprint as pp
import dataStructs
import pprint
import sys
from analyzeFunctions import checkFileFunction,multipleBranchDive
#os.chdir('Reports/')



def virustotal_threatscore(returnedData):
    virustotal_positives = returnedData[0]['Verdict']
    virustotal_total = returnedData[0]['Total']
    virustotal_threatscore = virustotal_positives/virustotal_total
    returnedData[0]['ThreatScore'] = virustotal_threatscore
    return returnedData



def get_vt_verdict(returnedData):
    for key in (returnedData[1]['Verdict'][0]):
          filescan_verdict = returnedData[1]['Verdict'][0][key]
    return filescan_verdict



def malicious_verdict(returnedData,reportType):

    count = 0
    Final_verdict = {}
    Final_score = {}

    if(reportType == 'FS'):
        verdict = list(returnedData[0]['Verdict'][0].values())[0]
        returned_verdict = {'FilescanIO':verdict}
        #filescan_verdict = get_vt_verdict(returnedData)    
    elif reportType == 'VT':
        verdict = returnedData[0]['Verdict']
        returned_verdict = {'VirusTotal':verdict}
    elif reportType == 'HY':
        verdict = returnedData[0]['Verdict']
        returned_verdict = {'Hybrid Analysis':verdict}
    elif reportType == 'AN':
        verdict = returnedData[0]['Verdict']
        returned_verdict = {'Anyrun':verdict}
    else:
        print("Something went wrong with report type")
    
    returnedData.append(returned_verdict)
    return returnedData
   
   
   
def calculateFinalVerdict(listOfData):
    #TODO Redo this logic
    count = 0
    
       
    hybrid_verdict = listOfData[2]['Verdict']
    virustotal_verdict =listOfData[0]['Verdict']
    listOfData.pop(3)
    listOfData.pop(1)
        
    testing = {'title': "Statistics", 'Final_verdict': {hybrid_verdict:"Hybrid Analaysis", virustotal_verdict: "VirusTotal"}}
    
    
    listOfData.append(testing)

    #if anyrun_verdict > 0 :
    #    count = count  + 1
    #if filescan_verdict == 'MALICIOUS':
    #    count = count + 1
    if hybrid_verdict == 'malicious':
       count = count + 1
    if virustotal_verdict > 0:
       count = count + 1
    #

    num_verdicts = 2 # 4 if we include AnyRun and FileScan
    
    Final_score = {'title': "Final",'Final_score':"{}/{}".format(count, num_verdicts)}
    listOfData.append(Final_score)
    return listOfData

def startAnalysis(infile,reportType):
    print('85 ', infile)
    filename = infile.split('/')[-1]
    #print(80, "Analysis: "+filename)

    filesToAnalyze = {}  
    
    #for filename in os.listdir(os.getcwd()):
    with open(filename, 'r') as f: 
        filesToAnalyze[filename] = json.load(f)
        
    with open("formatFile.json", "r") as read_file:
        formatFile = json.load(read_file)
    
    returnedData = []
    for j in filesToAnalyze: # 0 .. X        
        currentdir = filesToAnalyze[j]
        returnedDictionary = {}
        for section in formatFile[j].keys():
            returnedDictionary[section] = checkFileFunction(currentdir,formatFile[j][section])
        returnedDictionary['title'] = j
        returnedData.append(returnedDictionary)
    
    #print(returnedData) 
    
    if(reportType == 'VT'):
        returnedData = virustotal_threatscore(returnedData)
    returnedData = malicious_verdict(returnedData,reportType) #final analyzed data
    pprint.pprint(returnedData)
    return returnedData
